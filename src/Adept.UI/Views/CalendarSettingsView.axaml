<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:Adept.UI.ViewModels"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="Adept.UI.Views.CalendarSettingsView"
             x:DataType="vm:CalendarSettingsViewModel">
  <Design.DataContext>
    <vm:CalendarSettingsViewModel />
  </Design.DataContext>

  <ScrollViewer>
    <StackPanel Margin="20" Spacing="10">
      <TextBlock Text="Google Calendar Settings" FontSize="24" FontWeight="Bold" Margin="0,0,0,10" />

      <TextBlock Text="To use Google Calendar integration, you need to set up OAuth credentials:" />
      <TextBlock Text="1. Go to the Google Cloud Console (https://console.cloud.google.com)" />
      <TextBlock Text="2. Create a new project or select an existing one" />
      <TextBlock Text="3. Enable the Google Calendar API" />
      <TextBlock Text="4. Create OAuth 2.0 credentials (Web application type)" />
      <TextBlock Text="5. Add http://localhost:8080 as an authorized redirect URI" />
      <TextBlock Text="6. Copy the Client ID and Client Secret below" />

      <Grid ColumnDefinitions="Auto,*" RowDefinitions="Auto,Auto" Margin="0,10,0,0">
        <TextBlock Grid.Row="0" Grid.Column="0" Text="Client ID:" VerticalAlignment="Center" Margin="0,0,10,0" />
        <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding ClientId}" Watermark="Enter your Client ID" />

        <TextBlock Grid.Row="1" Grid.Column="0" Text="Client Secret:" VerticalAlignment="Center" Margin="0,0,10,0" />
        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding ClientSecret}" Watermark="Enter your Client Secret" PasswordChar="â€¢" />
      </Grid>

      <StackPanel Orientation="Horizontal" Spacing="10" Margin="0,10,0,0">
        <Button Content="Save Credentials" Command="{Binding SaveCredentialsCommand}" />
        <Button Content="Authenticate" Command="{Binding AuthenticateCommand}" IsEnabled="{Binding !IsAuthenticating}" />
        <Button Content="Revoke Authentication" Command="{Binding RevokeAuthenticationCommand}" IsEnabled="{Binding IsAuthenticated}" />
      </StackPanel>

      <ProgressBar IsIndeterminate="True" IsVisible="{Binding IsAuthenticating}" Margin="0,10,0,0" />

      <Border BorderBrush="Gray" BorderThickness="1" Padding="10" Margin="0,10,0,0">
        <StackPanel Spacing="5">
          <TextBlock Text="Status:" FontWeight="Bold" />
          <TextBlock Text="{Binding StatusMessage}" TextWrapping="Wrap" />
          <TextBlock Text="Authentication Status:" FontWeight="Bold" Margin="0,10,0,0" />
          <TextBlock Text="{Binding IsAuthenticated, Converter={StaticResource BoolToStringConverter}, ConverterParameter='Authenticated|Not Authenticated'}" />
        </StackPanel>
      </Border>

      <!-- Calendar Feature Settings -->
      <Expander Header="Calendar Feature Settings" IsExpanded="False" Margin="0,10,0,0" IsEnabled="{Binding IsAuthenticated}">
        <StackPanel Spacing="10" Margin="0,10,0,0">
          <!-- Default Reminder Settings -->
          <GroupBox Header="Default Reminder Settings">
            <StackPanel Spacing="10" Margin="0,10,0,0">
              <CheckBox Content="Use Default Reminders" IsChecked="{Binding UseDefaultReminders}" />

              <Grid ColumnDefinitions="Auto,*,Auto,Auto" RowDefinitions="Auto" IsEnabled="{Binding !UseDefaultReminders}">
                <TextBlock Grid.Column="0" Text="Reminder Time:" VerticalAlignment="Center" Margin="0,0,10,0" />
                <NumericUpDown Grid.Column="1" Value="{Binding ReminderMinutes}" Minimum="0" Maximum="40320" />
                <TextBlock Grid.Column="2" Text="minutes before event" VerticalAlignment="Center" Margin="10,0,0,0" />
                <ComboBox Grid.Column="3" SelectedItem="{Binding ReminderMethod}" Margin="10,0,0,0">
                  <ComboBoxItem Content="Email" />
                  <ComboBoxItem Content="Popup" />
                </ComboBox>
              </Grid>

              <Button Content="Save Default Reminder Settings" Command="{Binding SaveReminderSettingsCommand}" HorizontalAlignment="Left" />
            </StackPanel>
          </GroupBox>

          <!-- Color Coding Settings -->
          <GroupBox Header="Color Coding Settings">
            <StackPanel Spacing="10" Margin="0,10,0,0">
              <TextBlock Text="Default Event Color:" />
              <ComboBox Items="{Binding ColorPalette}" SelectedItem="{Binding SelectedColor}" Width="200" HorizontalAlignment="Left">
                <ComboBox.ItemTemplate>
                  <DataTemplate>
                    <StackPanel Orientation="Horizontal" Spacing="5">
                      <Rectangle Width="16" Height="16" Fill="{Binding Background}" />
                      <TextBlock Text="{Binding Name}" VerticalAlignment="Center" />
                    </StackPanel>
                  </DataTemplate>
                </ComboBox.ItemTemplate>
              </ComboBox>

              <Button Content="Save Color Settings" Command="{Binding SaveColorSettingsCommand}" HorizontalAlignment="Left" />
            </StackPanel>
          </GroupBox>

          <!-- Sharing Settings -->
          <GroupBox Header="Sharing Settings">
            <StackPanel Spacing="10" Margin="0,10,0,0">
              <TextBlock Text="Default Event Visibility:" />
              <ComboBox SelectedItem="{Binding DefaultVisibility}" Width="200" HorizontalAlignment="Left">
                <ComboBoxItem Content="Default" />
                <ComboBoxItem Content="Public" />
                <ComboBoxItem Content="Private" />
                <ComboBoxItem Content="Confidential" />
              </ComboBox>

              <TextBlock Text="Default Attendees:" Margin="0,10,0,0" />
              <Grid ColumnDefinitions="*,Auto" RowDefinitions="Auto">
                <TextBox Grid.Column="0" Text="{Binding AttendeeEmail}" Watermark="Enter email address" />
                <Button Grid.Column="1" Content="Add" Command="{Binding AddAttendeeCommand}" Margin="5,0,0,0" />
              </Grid>

              <ListBox Items="{Binding DefaultAttendees}" MaxHeight="100" Margin="0,5,0,0">
                <ListBox.ItemTemplate>
                  <DataTemplate>
                    <Grid ColumnDefinitions="*,Auto">
                      <TextBlock Grid.Column="0" Text="{Binding Email}" VerticalAlignment="Center" />
                      <Button Grid.Column="1" Content="Remove" Command="{Binding $parent[ListBox].DataContext.RemoveAttendeeCommand}" CommandParameter="{Binding}" />
                    </Grid>
                  </DataTemplate>
                </ListBox.ItemTemplate>
              </ListBox>

              <Button Content="Save Sharing Settings" Command="{Binding SaveSharingSettingsCommand}" HorizontalAlignment="Left" Margin="0,10,0,0" />
            </StackPanel>
          </GroupBox>

          <!-- Attachment Settings -->
          <GroupBox Header="Attachment Settings">
            <StackPanel Spacing="10" Margin="0,10,0,0">
              <CheckBox Content="Enable Attachments" IsChecked="{Binding EnableAttachments}" />
              <TextBlock Text="Note: Attachments require Google Drive integration and will be implemented in a future update." TextWrapping="Wrap" Foreground="Gray" />
            </StackPanel>
          </GroupBox>
        </StackPanel>
      </Expander>
    </StackPanel>
  </ScrollViewer>
</UserControl>
